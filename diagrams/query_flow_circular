// End-to-End Query Flow (Circular)
digraph QueryFlowCircular {
	graph [bgcolor=white fontname=Arial fontsize=14 nodesep=0.8 overlap=false ranksep=2.0 sep="+25,25" splines=true]
	node [fontname=Arial fontsize=12 margin="0.3,0.2" style=filled]
	edge [fontcolor=black fontname=Arial fontsize=10 len=1.5]
	happe [label="HAPPE
Daemon" fillcolor="#FFF2CC" fontsize=14 height=2.0 shape=circle style="filled,bold" width=2.0]
	user [label="End User" fillcolor="#D4E8FC" shape=box]
	ida [label="IDA
Daemon" fillcolor="#D8BFD8" shape=box]
	mem_mcp [label="Memory
MCP Server" fillcolor="#FFDAB9" shape=cylinder]
	other_mcp [label="Other MCP
Server(s)" fillcolor="#E0FFE0" shape=component]
	llm [label="Main LLM
API" fillcolor="#ADD8E6" shape=box]
	user -> happe [label="1. Query" color=black penwidth=1.5]
	happe -> ida [label="2. Get Memories" color=black penwidth=1.5]
	ida -> mem_mcp [label="3. Retrieve" color=black penwidth=1.5]
	mem_mcp -> ida [label="4. Memories" color=black penwidth=1.5 style=dashed]
	ida -> happe [label="5. Memories" color=black penwidth=1.5 style=dashed]
	happe -> llm [label="6. Generate" color=black penwidth=1.5]
	llm -> happe [label="8. Response" color=black penwidth=1.5 style=dashed]
	llm -> happe [label="7a. Function Calls" color=blue dir=back style=dashed]
	happe -> other_mcp [label="7b. Tool Call" color=blue penwidth=1.2]
	other_mcp -> happe [label="7c. Result" color=blue penwidth=1.2 style=dashed]
	happe -> llm [label="7d. Tool Response" color=blue penwidth=1.2]
	happe -> user [label="9. Response" color=black penwidth=1.5 style=dashed]
	happe -> ida [label="10. Store Turn" color=darkgreen penwidth=1.2 style=dotted]
	ida -> mem_mcp [label="11. Store Memory" color=darkgreen penwidth=1.2 style=dotted]
	mem_mcp -> ida [label="12. Ack" color=darkgreen penwidth=1.2 style="dotted,dashed"]
	legend_main [label="Main Flow" fontsize=10 shape=plaintext]
	legend_tool [label="Tool Loop" fontcolor=blue fontsize=10 shape=plaintext]
	legend_async [label="Async Storage" fontcolor=darkgreen fontsize=10 shape=plaintext]
	legend_main -> legend_tool [style=invis]
	legend_tool -> legend_async [style=invis]
	happe -> user [constraint=false style=invis]
	happe -> llm [constraint=false style=invis]
	happe -> ida [constraint=false style=invis]
	happe -> other_mcp [constraint=false style=invis]
	happe -> mem_mcp [constraint=false style=invis]
}
